# random_mac - randomly generate a mac bootup or when turning off and on an interface
#
# This service causes network devices to be brought up or down as a result
# of hardware being added or removed, including that which isn't ordinarily
# removable.
#

description	"configure random mac device"

          #and local-filesystems
start on (net-device-up
          and runlevel [2345])
#stop on runlevel [016]

pre-start script
    #Function to generate a random MAC
    generate_mac() {
        local MAC='00'
        #local MAC=`head /dev/urandom      |md5sum | md5sum | head  -c 2 `
        local MAC=$MAC:`head /dev/urandom |md5sum | md5sum | head  -c 2 `
        local MAC=$MAC:`head /dev/urandom |md5sum | md5sum | head  -c 2 `
        local MAC=$MAC:`head /dev/urandom |md5sum | md5sum | head  -c 2 `
        local MAC=$MAC:`head /dev/urandom |md5sum | md5sum | head  -c 2 `
        local MAC=$MAC:`head /dev/urandom |md5sum | md5sum | head  -c 2 `

        #Spit out the results
        echo "$MAC"
    }


    #Give every interface a brand new shiny MAC
    for myface in `ifconfig -a | grep "Link encap" | grep -v "lo" | grep -v "unity_support_test" |awk '{print $1}' `; do
        mymac=$(generate_mac)
        ifconfig "$myface" down             2> /tmp/$myface."a" || true
    	ifconfig "$myface" hw ether $mymac  2> /tmp/$myface."b" || true
        ifconfig "$myface" up               2> /tmp/$myface."c" || true
    done
end script

task
exec uname -a
